{"version":3,"sources":["hooks/remote/RemoteWrapper.tsx","hooks/usePianoKeys/usePianoKeys.ts","hooks/remote/hooks.ts","components/Piano/Piano.tsx","components/Abc/Abc.tsx","pages/Main/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["socket","WebSocket","handlers","onmessage","event","payload","JSON","parse","data","name","forEach","fn","wrappedSocket","on","handler","push","remoteContext","React","createContext","RemoteWrapper","children","Provider","value","NOTES","getKeyDetail","keyId","key","note","noteName","substr","oct","Math","ceil","isSharp","includes","CHORDS_CONFIG","label","steps","rootOnly","CHORDS","base","index","chord","startingStep","length","notes","i","join","console","log","type","getChord","ids","unique","Array","from","Set","map","id","usePianoKeys","remoteKeys","initialValue","useState","state","setState","useContext","useRemoteState","keys","Object","Piano","pressed","start","octaves","showNotes","getKeyIndicator","allKeys","octave","className","getAbcNotation","3","sym","form","String","prototype","toUpperCase","4","5","toLowerCase","6","call","Abc","divRef","createRef","useEffect","current","abcString","abcjs","renderAbc","style","justifyContent","display","ref","Main","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f74969e7.chunk.js","sourcesContent":["import React from 'react';\n\nconst socket = new WebSocket('ws://pi.local:8080');\n\nconst handlers = {};\nsocket.onmessage = event => {\n  const payload = JSON.parse(event.data);\n  if (!handlers[payload.name]) return;\n  handlers[payload.name].forEach(fn => {\n    fn(payload.data);\n  });\n};\n\nconst wrappedSocket = {\n  socket,\n  on: (name, handler) => {\n    handlers[name] = handler[name] || [];\n    handlers[name].push(handler);\n  },\n};\nexport const remoteContext = React.createContext(wrappedSocket);\n\nexport const RemoteWrapper = ({children}) => {\n  return (\n    <remoteContext.Provider value={wrappedSocket}>\n      {children}\n    </remoteContext.Provider>\n  );\n};\n","import {useRemoteState} from 'hooks/remote';\n\nexport const NOTES = [\n  'C',\n  'C#',\n  'D',\n  'D#',\n  'E',\n  'F',\n  'F#',\n  'G',\n  'G#',\n  'A',\n  'A#',\n  'B',\n];\n\ninterface KeysState {\n  [id: string]: boolean;\n}\n\nconst getKeyDetail = function(keyId: number) {\n  return {\n    key: keyId,\n    note: NOTES[keyId % 12],\n    noteName: NOTES[keyId % 12].substr(0, 1),\n    oct: Math.ceil((keyId + 1) / 12),\n    isSharp: [1, 3, 6, 8, 10].includes(keyId % 12),\n  };\n};\n\nconst CHORDS_CONFIG = [\n  {\n    label: 'major',\n    steps: [0, 4, 7],\n  },\n  {\n    label: 'minor',\n    steps: [0, 3, 7],\n  },\n  {\n    label: 'dim',\n    steps: [0, 3, 6],\n    rootOnly: true,\n  },\n  {\n    label: 'aug',\n    steps: [0, 4, 8],\n    rootOnly: true,\n  },\n  {\n    label: '7',\n    steps: [0, 4, 7, 10],\n  },\n  {\n    label: 'minor 7',\n    steps: [0, 3, 7, 10],\n  },\n  {\n    label: 'maj7',\n    steps: [0, 4, 7, 11],\n  },\n  {\n    label: 'minor maj7',\n    steps: [0, 3, 7, 11],\n  },\n];\n\nconst CHORDS = {};\nNOTES.forEach((base, index) => {\n  CHORDS_CONFIG.forEach(chord => {\n    for (\n      let startingStep = 0;\n      startingStep < chord.steps.length;\n      startingStep++\n    ) {\n      const notes = [];\n      for (let i = 0; i < chord.steps.length; i++) {\n        notes.push(\n          NOTES[\n            (index + chord.steps[(startingStep + i) % chord.steps.length]) % 12\n          ],\n        );\n      }\n      if (CHORDS[notes.join()]) {\n        console.log('CLASH', chord.label, CHORDS[notes.join()].type);\n      }\n      CHORDS[notes.join()] = {\n        base,\n        type: chord.label,\n      };\n      if (chord.rootOnly) break;\n    }\n  });\n});\n\nconst getChord = (ids: number[]) => {\n  const unique = Array.from(new Set(ids.map(i => i % 12)))\n    .map(id => NOTES[id])\n    .join();\n  return CHORDS[unique];\n};\n\nexport default function usePianoKeys() {\n  const remoteKeys = useRemoteState<KeysState>('keys', {});\n  const map: {\n    [id: number]: boolean;\n  } = {};\n  const ids = [];\n  const keys = Object.keys(remoteKeys).map(i => {\n    map[~~i] = true;\n    ids.push(~~i);\n    return getKeyDetail(~~i);\n  });\n  const chord = getChord(ids);\n\n  return {keys, map, ids, chord};\n}\n","import {useState, useContext} from 'react';\nimport {remoteContext} from './RemoteWrapper';\n\nexport function useRemoteState<T>(id: string, initialValue: T): T {\n  const [state, setState] = useState<T>(initialValue);\n  const socket = useContext(remoteContext);\n  socket.on(`state-${id}`, data => {\n    setState(data);\n  });\n  return state;\n}\n","import React from 'react';\nimport {NOTES} from 'hooks/usePianoKeys';\n\ninterface Props {\n  pressed: {\n    [id: number]: boolean;\n  };\n  start: number;\n  octaves: number;\n  showNotes?: boolean;\n}\nexport const Piano = ({pressed, start, octaves, showNotes}) => {\n  function getKeyIndicator(index) {\n    if (showNotes) return NOTES[index % 12];\n    return 'â¬¤';\n  }\n\n  const allKeys = [];\n  for (let octave = start; octave < octaves; octave++) {\n    for (let i = octave * 12; i < octave * 12 + 12; i++) {\n      if (i % 12 === 0 || i % 12 === 5) {\n        allKeys.push(\n          <div key={`group-${i}`} className=\"group\">\n            <div className={`anchor ${pressed[i] ? 'active' : ''}`}>\n              <div className=\"indicator\">{getKeyIndicator(i)}</div>\n            </div>\n          </div>,\n        );\n      } else {\n        allKeys.push(\n          <div key={`group-${i}`} className=\"group\">\n            <div className={`black ${pressed[i] ? 'active' : ''}`}>\n              <div className=\"indicator\">{getKeyIndicator(i)}</div>\n            </div>\n            <div className={`anchor ${pressed[i + 1] ? 'active' : ''}`}>\n              <div className=\"indicator\">{getKeyIndicator(i + 1)}</div>\n            </div>\n          </div>,\n        );\n        i++;\n      }\n    }\n  }\n  return (\n    <div id=\"piano-wrapper\">\n      <div id=\"piano\">{allKeys}</div>\n    </div>\n  );\n};\n","import React, {createRef, useEffect} from 'react';\nimport abcjs from 'abcjs/midi';\nimport 'abcjs/abcjs-midi.css';\n\nconst getAbcNotation = note => {\n  const oct = {\n    3: {\n      sym: ',',\n      form: String.prototype.toUpperCase,\n    },\n    4: {\n      sym: '',\n      form: String.prototype.toUpperCase,\n    },\n    5: {\n      sym: '',\n      form: String.prototype.toLowerCase,\n    },\n    6: {\n      sym: \"'\",\n      form: String.prototype.toLowerCase,\n    },\n  };\n\n  if (note.oct < 3 || note.oct > 6) return '';\n\n  return (\n    (note.isSharp ? '^' : '') +\n    oct[note.oct].form.call(note.noteName) +\n    oct[note.oct].sym\n  );\n};\n\nexport default function Abc({keys}) {\n  const divRef = createRef<HTMLDivElement>();\n  console.log(keys);\n  useEffect(() => {\n    if (!divRef.current) return;\n    const abcString = 'M:C\\n    [' + keys.map(getAbcNotation).join('') + ']';\n    abcjs.renderAbc('vex', abcString, {});\n  }, [divRef]);\n\n  return (\n    <div\n      id=\"vex\"\n      style={{justifyContent: 'center', display: 'inline-flex'}}\n      ref={divRef}\n    ></div>\n  );\n}\n","import React from 'react';\nimport usePianoKeys from 'hooks/usePianoKeys';\nimport Piano from 'components/Piano';\nimport Abc from 'components/Abc';\n\nexport default function Main() {\n  const {keys, map, chord} = usePianoKeys();\n\n  return (\n    <>\n      <div className=\"chord\">\n        <h2>\n          {chord && (\n            <>\n              {chord.base} {chord.type}\n            </>\n          )}\n        </h2>\n      </div>\n      <Piano pressed={map} start={1} octaves={5} showNotes={true} />\n      <Abc keys={keys} />\n    </>\n  );\n}\n","import React from 'react';\nimport {RemoteWrapper} from 'hooks/remote';\nimport './App.css';\nimport Main from 'pages/Main';\n\nconst App = () => {\n  return (\n    <RemoteWrapper>\n      <Main />\n    </RemoteWrapper>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}